import os
import datetime
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler, CallbackQueryHandler,
    ContextTypes, MessageHandler, filters
)
from dotenv import load_dotenv
from ml_engine import FAQAnswerEngine

# –ó–∞–≥—Ä—É–∑–∫–∞ .env
load_dotenv()

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TELEGRAM_TOKEN")

# –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π FAQ
FAQ = {
    "connect": {
        "question": "–ö–∞–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–∞—É—à–Ω–∏–∫–∏?",
        "answer": (
            "1. –í–∫–ª—é—á–∏—Ç–µ Bluetooth –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ.\n"
            "2. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–µ–π—Å —Ä—è–¥–æ–º —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º.\n"
            "3. –ó–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∞ –∫–µ–π—Å–µ –¥–æ –º–∏–≥–∞–Ω–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞.\n"
            "4. –í—ã–±–µ—Ä–∏—Ç–µ 'AirPods Pro' –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Bluetooth.\n\n"
            "_–ù–∞ Android –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ Bluetooth_"
        )
    },
    "battery": {
        "question": "–ö–∞–∫ —É–∑–Ω–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å –∑–∞—Ä—è–¥–∞?",
        "answer": (
            "- \ud83d\udcf1 iPhone: –æ—Ç–∫—Ä–æ–π—Ç–µ –∫–µ–π—Å —Ä—è–¥–æ–º —Å —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º ‚Äî –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—Å—è –æ–∫–Ω–æ.\n"
            "- \ud83d\udfe2 –ó–µ–ª–µ–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä ‚Äî –∑–∞—Ä—è–¥ –ø–æ–ª–Ω—ã–π, \ud83d\udfe0 –û—Ä–∞–Ω–∂–µ–≤—ã–π ‚Äî –º–µ–Ω–µ–µ 100%.\n"
            "- \ud83d\udcf2 Android: —É—Ä–æ–≤–µ–Ω—å –∑–∞—Ä—è–¥–∞ –≤–∏–¥–µ–Ω –≤ —à—Ç–æ—Ä–∫–µ –∏–ª–∏ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (AirBattery, MaterialPods)."
        )
    },
    "one_airpod": {
        "question": "–†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –Ω–∞—É—à–Ω–∏–∫",
        "answer": (
            "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –æ–±–∞ –Ω–∞—É—à–Ω–∏–∫–∞ –∑–∞—Ä—è–∂–µ–Ω—ã.\n"
            "2. –û—á–∏—Å—Ç–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –≤ –∫–µ–π—Å–µ.\n"
            "3. –°–±—Ä–æ—Å—å—Ç–µ –∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ.\n"
            "4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–∏–Ω –Ω–∞—É—à–Ω–∏–∫, –∑–∞—Ç–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –≤—Ç–æ—Ä–æ–π ‚Äî –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏."
        )
    },
    "sound": {
        "question": "–ü—Ä–æ–±–ª–µ–º—ã —Å–æ –∑–≤—É–∫–æ–º",
        "answer": (
            "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≥—Ä–æ–º–∫–æ—Å—Ç—å –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ.\n"
            "2. –û—á–∏—Å—Ç–∏—Ç–µ —Å–µ—Ç–∫–∏ –¥–∏–Ω–∞–º–∏–∫–æ–≤.\n"
            "3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ.\n"
            "4. –ó–∞—Ä—è–¥–∏—Ç–µ –Ω–∞—É—à–Ω–∏–∫–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é."
        )
    },
    "discharge": {
        "question": "–ë—ã—Å—Ç—Ä–æ —Ä–∞–∑—Ä—è–∂–∞—é—Ç—Å—è",
        "answer": (
            "1. –û—Ç–∫–ª—é—á–∏—Ç–µ —à—É–º–æ–ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.\n"
            "2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–∞—É—à–Ω–∏–∫–∏ –∫–ª–∞–¥—É—Ç—Å—è –≤ –∫–µ–π—Å.\n"
            "3. –ù–µ –æ—Å—Ç–∞–≤–ª—è–π—Ç–µ –ø–æ–¥–∫–ª—é—á—ë–Ω–Ω—ã–º–∏ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ.\n"
            "4. –ó–∞—Ä—è–¥ –¥–µ—Ä–∂–∏—Ç—Å—è 3‚Äì5 —á–∞—Å–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞."
        )
    },
    "sensor": {
        "question": "–ù–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–µ–Ω—Å–æ—Ä –Ω–∞–∂–∞—Ç–∏—è",
        "answer": (
            "1. –û—á–∏—Å—Ç–∏—Ç–µ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å –Ω–æ–∂–∫–∏ –Ω–∞—É—à–Ω–∏–∫–∞.\n"
            "2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–∂–∏–º–∞—Ç—å —á—É—Ç—å –Ω–∏–∂–µ —Å–µ—Ä–µ–¥–∏–Ω—ã –Ω–æ–∂–∫–∏.\n"
            "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–µ.\n"
            "4. –ù–∞ Android —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã ‚Äî —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ."
        )
    },
    "mic": {
        "question": "–ü—Ä–æ–±–ª–µ–º—ã —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–æ–º",
        "answer": (
            "1. –ü—Ä–æ—Ç—Ä–∏—Ç–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω—ã –Ω–∞ –Ω–æ–∂–∫–µ.\n"
            "2. –í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –≤—ã–±–µ—Ä–∏—Ç–µ –ª–µ–≤—ã–π –∏–ª–∏ –ø—Ä–∞–≤—ã–π –º–∏–∫—Ä–æ—Ñ–æ–Ω.\n"
            "3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é —Ä–∞–∑—Ä–µ—à—ë–Ω –¥–æ—Å—Ç—É–ø –∫ –º–∏–∫—Ä–æ—Ñ–æ–Ω—É."
        )
    },
    "noise_control": {
        "question": "–ö–∞–∫ —É–ø—Ä–∞–≤–ª—è—Ç—å —à—É–º–æ–ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ–º?",
        "answer": (
            "- –ù–∞ iPhone: —É–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –Ω–æ–∂–∫—É –Ω–∞—É—à–Ω–∏–∫–∞ –∏–ª–∏ —á–µ—Ä–µ–∑ ¬´–¶–µ–Ω—Ç—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è¬ª.\n"
            "- –†–µ–∂–∏–º—ã: *–®—É–º–æ–ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ*, *–ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å*, *–û—Ç–∫–ª—é—á–µ–Ω–æ*.\n"
            "- –ù–∞ Android: –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –Ω–µ –≤—Å–µ–≥–¥–∞, –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø—Ä–æ—à–∏–≤–∫–∏."
        )
    },
    "charging_case": {
        "question": "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –º–∏–≥–∞–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –Ω–∞ –∫–µ–π—Å–µ?",
        "answer": (
            "- \ud83d\udfe2 –ó–µ–ª–µ–Ω—ã–π ‚Äî –∫–µ–π—Å –∑–∞—Ä—è–∂–µ–Ω.\n"
            "- \ud83d\udfe0 –û—Ä–∞–Ω–∂–µ–≤—ã–π ‚Äî –∑–∞—Ä—è–¥ –º–µ–Ω–µ–µ 100%.\n"
            "- ‚ö™ –ë–µ–ª—ã–π –º–∏–≥–∞–µ—Ç ‚Äî —Ä–µ–∂–∏–º —Å–æ–ø—Ä—è–∂–µ–Ω–∏—è.\n"
            "- üî¥ –ö—Ä–∞—Å–Ω—ã–π ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, –æ—à–∏–±–∫–∞ –∏–ª–∏ —Ä–∞–∑—Ä—è–¥. –ó–∞—Ä—è–¥–∏—Ç–µ –∫–µ–π—Å."
        )
    },
    "reset": {
        "question": "–ö–∞–∫ —Å–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞—É—à–Ω–∏–∫–æ–≤?",
        "answer": (
            "1. –£–¥–∞–ª–∏—Ç–µ –Ω–∞—É—à–Ω–∏–∫–∏ –∏–∑ Bluetooth-—É—Å—Ç—Ä–æ–π—Å—Ç–≤ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ.\n"
            "2. –ü–æ–ª–æ–∂–∏—Ç–µ –Ω–∞—É—à–Ω–∏–∫–∏ –≤ –∫–µ–π—Å –∏ –∑–∞–∫—Ä–æ–π—Ç–µ –Ω–∞ 15 —Å–µ–∫.\n"
            "3. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–µ–π—Å –∏ —É–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∞ –Ω–µ–º 15 —Å–µ–∫, –ø–æ–∫–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–µ –º–∏–≥–Ω—ë—Ç –æ—Ä–∞–Ω–∂–µ–≤—ã–º, –∑–∞—Ç–µ–º –±–µ–ª—ã–º.\n"
            "4. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –Ω–∞—É—à–Ω–∏–∫–∏ –∑–∞–Ω–æ–≤–æ ‚Äî –æ–Ω–∏ —Å–±—Ä–æ—à–µ–Ω—ã."
        )
    },
    "care": {
        "question": "–ö–∞–∫ —É—Ö–∞–∂–∏–≤–∞—Ç—å –∑–∞ –Ω–∞—É—à–Ω–∏–∫–∞–º–∏?",
        "answer": (
            "üßº –ß–∏—Å—Ç–∏—Ç–µ –º—è–≥–∫–æ–π —Å—É—Ö–æ–π —â—ë—Ç–∫–æ–π.\n"
            "üö´ –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–æ–¥—É, —Å–ø–∏—Ä—Ç –∏–ª–∏ –∫–æ–º–ø—Ä–µ—Å—Å–æ—Ä—ã.\n"
            "‚ö° –ó–∞—Ä—è–∂–∞–π—Ç–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ, –Ω–µ –¥–æ–ø—É—Å–∫–∞–π—Ç–µ –≥–ª—É–±–æ–∫–æ–≥–æ —Ä–∞–∑—Ä—è–¥–∞.\n"
            "üì¶ –•—Ä–∞–Ω–∏—Ç–µ –≤ –∫–µ–π—Å–µ ‚Äî —ç—Ç–æ –∑–∞—â–∏—â–∞–µ—Ç –∏ –ø—Ä–æ–¥–ª–µ–≤–∞–µ—Ç —Å—Ä–æ–∫ —Å–ª—É–∂–±—ã."
        )
    }
}

engine = FAQAnswerEngine(FAQ)

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
def log_user_action(user_id: int, username: str, query: str):
    time = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    log_line = f"[{time}] User {username} (ID: {user_id}) ‚Üí {query}\n"
    with open("log.txt", "a", encoding="utf-8") as f:
        f.write(log_line)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ", callback_data="connect"),
         InlineKeyboardButton("üîã –ó–∞—Ä—è–¥", callback_data="battery")],
        [InlineKeyboardButton("üéß –û–¥–∏–Ω –Ω–∞—É—à–Ω–∏–∫", callback_data="one_airpod"),
         InlineKeyboardButton("üîä –ü—Ä–æ–±–ª–µ–º—ã —Å–æ –∑–≤—É–∫–æ–º", callback_data="sound")],
        [InlineKeyboardButton("‚ö° –ë—ã—Å—Ç—Ä—ã–π —Ä–∞–∑—Ä—è–¥", callback_data="discharge"),
         InlineKeyboardButton("üì∂ –®—É–º–æ–ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ", callback_data="noise_control")],
        [InlineKeyboardButton("üõ†Ô∏è –°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫", callback_data="reset"),
         InlineKeyboardButton("üéôÔ∏è –ú–∏–∫—Ä–æ—Ñ–æ–Ω", callback_data="mic")],
        [InlineKeyboardButton("ü§è –°–µ–Ω—Å–æ—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", callback_data="sensor"),
         InlineKeyboardButton("üí° –£—Ö–æ–¥", callback_data="care")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø –±–æ—Ç —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏ AirPods Pro 2.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:",
        reply_markup=reply_markup
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    faq_id = query.data
    faq = FAQ.get(faq_id)
    if faq:
        user = query.from_user
        log_user_action(user.id, user.username or "NoUsername", faq["question"])
        await query.message.reply_text(
            f"‚ùì *{faq['question']}*\n\n{faq['answer']}",
            parse_mode="Markdown"
        )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_input = update.message.text.strip()
    user = update.message.from_user
    question, answer = engine.find_best_match(user_input)
    if answer:
        log_user_action(user.id, user.username or "NoUsername", f"ML-match: {question}")
        await update.message.reply_text(
            f"‚ùì *{question}*\n\n{answer}", parse_mode="Markdown"
        )
    else:
        await update.message.reply_text(
            "ü§ñ –Ø –Ω–µ —É–≤–µ—Ä–µ–Ω, –∫–∞–∫ –æ—Ç–≤–µ—Ç–∏—Ç—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∏–∑ /start –∏–ª–∏ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ."
        )
        log_user_action(user.id, user.username or "NoUsername", f"ML-no-match: {user_input}")

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == "__main__":
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_callback))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    app.run_polling()
